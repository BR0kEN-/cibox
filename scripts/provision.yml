---
- hosts: all
  gather_facts: yes
  become: yes

  vars_files:
    - ../config.yml
    - vars/php.yml
    - vars/mysql.yml
    - vars/apache.yml

  vars:
    vagrant: no
    # Varnish configuration.
    varnish_enabled: false
    solr_enabled: true
    # Use this secret in your client(Drupal Varnish module) in order to connect to Varnish.
    varnish_secret: "14bac2e6-1e34-4770-8078-974373b76c90"
    composer_packages:
      drush/drush: 7.*

    cibox_protected_folders:
      user: propeople
      pass: givemebackup
      list:
        - "{{ webroot }}/cache"
        - "{{ webroot }}/backup"

    basic_packages:
      - python
      - python-dev
      - python-simplejson
      - curl
      - make
      - rsync
      - git
      - libmysqlclient-dev
      - apparmor-utils
      - bsdutils
      - software-properties-common
      - python-software-properties

    pip_packages:
      - setuptools
      - paramiko
      - pyyaml
      - jinja2
      - markupsafe
      - MySQL-python
      - ansible

  pre_tasks:
    - include: tasks/detect-vagrant.yml
      tags: ["always"]

    - name: Create virtual hosts only inside of VM
      set_fact:
        apache_create_vhosts: yes
      when: vagrant
      tags: ["always"]

    - include: tasks/project-variable.yml
      when: not vagrant
      tags: ["always"]

    - name: Set name for Jenkins job
      set_fact:
        jenkins_job: "{{ project }}"
      when: not vagrant
      tags: ["always"]

    - name: Update APT cache
      apt:
        update_cache: yes

    - name: Install basic packages for Ansible
      apt:
        name: "{{ item }}"
        state: present
      with_items: basic_packages

    - name: Downloading EasyInstall
      get_url:
        url: https://raw.githubusercontent.com/ActiveState/ez_setup/v0.9/ez_setup.py
        dest: ~/ez_setup.py

    - name: Install EasyInstall
      shell: "cd ~ && python ez_setup.py && rm -f ez_setup.py"

    - name: Install PIP
      shell: "easy_install pip"

    - name: Install PIP packages
      pip:
        name: "{{ item }}"
        state: latest
      with_items: pip_packages

    - name: Stop services
      service:
        name: "{{ item }}"
        state: stopped
      ignore_errors: yes
      with_items:
        - varnish
        - apache2

    - name: Create CIBox command line utility
      file:
        src: /var/www/cibox
        dest: /usr/bin/cibox
        state: link
      when: vagrant

    - name: Generate Bash completion for CIBox utility
      template:
        src: templates/cibox.complete.sh.j2
        dest: /etc/bash_completion.d
      when: vagrant

  roles:
    - role: cibox-misc
      tags: ["misc"]

    - role: ansible-role-apache
      tags: ["apache", "php-stack"]

    - role: ansible-role-php
      tags: ["php-stack"]

    - role: ansible-php-pear
      tags: ["pear", "php-stack"]

    - role: ansible-role-php-xhprof
      tags: ["xhprof", "php-stack"]

    - role: ansible-role-php-xdebug
      tags: ["xdebug", "php-stack"]

    - role: ansible-composer
      tags: ["composer", "php-stack"]

    - role: cibox-wp-cli
      tags: ["wp-cli", "php-stack"]

    - role: ansible-role-mysql
      tags: ["mysql", "php-stack"]

    - role: cibox-jetty-solr
      when: solr_enabled
      tags: ["solr", "php-stack"]

    - role: cibox-sniffers
      tags: ["sniffers", "php-stack"]

    - role: cibox-mysql-config
      tags: ["mysql", "php-stack"]

    - role: cibox-ssl-config
      tags: ["ssl-config"]

    - role: cibox-varnish
      when: varnish_enabled
      tags: ["varnish"]

    - role: ansible-role-memcached
      tags: ["memcache", "php-stack"]

    - role: cibox-swap
      when: not vagrant and ansible_virtualization_type != "openvz"
      tags: ["swap"]

    - role: cibox-jenkins
      when: not vagrant
      tags: ["jenkins"]

    - role: cibox-selenium
      tags: ["selenium"]

    - role: cibox-protected-folders
      when: not vagrant

  tasks:
    - name: Starting random rnd-tools service
      shell: rngd -r /dev/urandom
      when: not vagrant and ansible_virtualization_type != "openvz"

    # @todo Doesn't work using Ansible "gem" module.
    - name: Install Compass
      shell: gem install compass

    - name: Restart services
      service:
        name: "{{ item }}"
        state: restarted
      ignore_errors: yes
      with_items:
        - apache2
