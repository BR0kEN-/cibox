---
- hosts: all
  gather_facts: yes
  become: yes

  vars_files:
    - ../config.yml
    - vars/ip.yml
    - vars/ports.yml
    - vars/mysql.yml
    - vars/nginx.yml
    - vars/apache.yml

  vars_prompt:
    - name: cibox_php_version
      prompt: Which version of PHP you'd want to install? (5.6/7.0)
      default: 5.6
      private: no
      tags: ["php", "php-stack"]

    - name: setup_solr
      prompt: Do you want to install Solr? (yes/NO)
      private: no
      tags: ["solr"]

    - name: setup_swap
      prompt: Do you want to setup swap? (yes/NO)
      private: no
      # WARNING!!! This condition will be processed only inside of Vagrantfile! The "vagrant"
      # variable is undefined here and "when" construction aren't processed by Ansible for prompts.
      when: not vagrant
      tags: ["swap"]

    - name: http_auth_user
      prompt: Username for HTTP authentication
      default: admin
      private: no
      # WARNING!!! This condition will be processed only inside of Vagrantfile! The "vagrant"
      # variable is undefined here and "when" construction aren't processed by Ansible for prompts.
      when: not vagrant
      tags: ["security"]

    - name: http_auth_pass
      prompt: Passowrd for HTTP authentication
      default: r3str1cteDHere
      private: yes
      # WARNING!!! This condition will be processed only inside of Vagrantfile! The "vagrant"
      # variable is undefined here and "when" construction aren't processed by Ansible for prompts.
      when: not vagrant
      tags: ["security"]

  vars:
    vagrant: no
    cibox_ssl_folder: /etc/ssl/private

    cibox_protected_folders:
      - path: "{{ webroot }}"
        user: "{{ http_auth_user }}"
        pass: "{{ http_auth_pass }}"

    basic_packages:
      - python
      - python-dev
      - python-pycurl
      - python-simplejson
      - curl
      - make
      - rsync
      - git
      - libmysqlclient-dev
      - apparmor-utils
      - bsdutils
      - software-properties-common
      - python-software-properties
      - build-essential
      - libffi-dev
      - libssl-dev

    pip_packages:
      - setuptools
      - paramiko
      - pyyaml
      - jinja2
      - markupsafe
      - MySQL-python
      - ansible

  pre_tasks:
    - include: tasks/detect-vagrant.yml
      tags: ["always"]

    - include: tasks/project-variable.yml
      when: not vagrant
      tags: ["always"]

    - name: "Obtain home directory of \"{{ ansible_user }}\" user"
      shell: "eval echo ~{{ ansible_user }}"
      register: user_home
      tags: ["always"]

    - name: Set name for Jenkins job
      set_fact:
        jenkins_job: "{{ project }}"
      when: not vagrant
      tags: ["always"]

    - name: Process facts
      set_fact:
        extras:
          swap: "{{ setup_swap | bool }}"
          solr: "{{ setup_solr | bool }}"
      tags: ["always"]

    - name: Update APT cache
      apt:
        update_cache: yes

    - name: Install basic packages for Ansible
      apt:
        name: "{{ item }}"
        state: present
      with_items: "{{ basic_packages }}"

    - name: Downloading EasyInstall
      get_url:
        url: https://raw.githubusercontent.com/ActiveState/ez_setup/v0.9/ez_setup.py
        dest: ~/ez_setup.py

    - name: Install EasyInstall
      shell: "cd ~ && python ez_setup.py && rm -f ez_setup.py"

    - name: Install PIP
      shell: "easy_install pip"

    - name: Install PIP packages
      pip:
        name: "{{ item }}"
        state: latest
      with_items: "{{ pip_packages }}"

    - name: Create CIBox command line utility
      file:
        src: /var/www/cibox
        dest: /usr/bin/cibox
        state: link
      when: vagrant

    - name: Generate Bash completion for CIBox utility
      template:
        src: templates/cibox.complete.sh.j2
        dest: /etc/bash_completion.d
      when: vagrant

  roles:
    - role: cibox-misc
      tags: ["misc"]

    - role: cibox-ssl-config
      tags: ["ssl"]

    - role: cibox-nginx
      tags: ["nginx", "php-stack", "security"]
      when: not vagrant

    - role: ansible-role-apache
      tags: ["apache", "php-stack"]

    - role: cibox-php
      tags: ["php", "php-stack"]

    - role: ansible-composer
      tags: ["composer", "php-stack"]

    - role: ansible-role-mysql
      tags: ["mysql", "php-stack"]

    - role: cibox-jetty-solr
      when: extras.solr
      tags: ["solr", "php-stack"]

    - role: cibox-sniffers
      tags: ["sniffers", "php-stack"]

    - role: cibox-mysql-config
      tags: ["mysql", "php-stack"]

    - role: ansible-role-memcached
      tags: ["memcache", "php-stack"]

    - role: cibox-swap
      when: not vagrant and extras.swap and ansible_virtualization_type != "openvz"
      tags: ["swap"]

    - role: cibox-selenium
      tags: ["selenium"]

    - role: cibox-security
      tags: ["security"]
      when: not vagrant

    - role: cibox-jenkins
      when: not vagrant
      tags: ["jenkins"]

  tasks:
    - name: Starting random rnd-tools service
      shell: rngd -r /dev/urandom
      when: not vagrant and ansible_virtualization_type != "openvz"
      tags: ["always"]

    # @todo Doesn't work using Ansible "gem" module.
    - name: Install Compass
      shell: gem install compass
      tags: ["sass"]

    - name: Restart service
      service:
        name: "{{ item }}"
        state: restarted
      ignore_errors: yes
      with_items: ["apache2", "nginx"]
      tags: ["always"]
