---
- hosts: localhost
  connection: local
  gather_facts: no

  vars:
    # As name of folder inside of "cmf/".
    cmf: "drupal"
    without_sources: no
    # Every "download_url" will be prefixed with "https://" and ended by "-{{ version }}.tar.gz".
    cmfs:
      drupal:
        download_url: "www.drupal.org/files/projects/drupal"
        default_version: "7.51"
      wordpress:
        download_url: "wordpress.org/wordpress"
        default_version: "4.6.1"

  vars_files:
    - ../config.yml

  tasks:
    - include: tasks/project-variable.yml

    - name: Set default version of CMF
      set_fact:
        version: "{{ cmfs[cmf].default_version }}"
      when: "{{ version is undefined }}"

    - name: Determine major version of CMF
      set_fact:
        major: "{{ version.split('.') | first }}"

    - name: Check for CMF configuration
      stat:
        path: "../cmf/{{ cmf }}/{{ major | int }}"
      register: cmf_configs

    - name: CMF is not available
      fail:
        msg: "You are not allowed to install {{ cmf | capitalize }} {{ version }} because it isn't pre-configured."
      when: "{{ not cmf_configs.stat.exists }}"

    - name: Checking for existing project
      stat:
        path: "../{{ project }}/docroot"
      register: project_path

    - name: Create project directory
      file:
        mode: 0755
        path: "../{{ project }}/docroot"
        state: directory
      when: "{{ not project_path.stat.exists }}"

    - name: Download CMF
      get_url:
        url: "https://{{ cmfs[cmf].download_url }}-{{ version }}.tar.gz"
        dest: "../{{ project }}/cmf.tar.gz"
      when: "{{ not without_sources and not project_path.stat.exists }}"

    - name: Unarchive CMF
      shell: "tar --strip-components=1 -xf ../{{ project }}/cmf.tar.gz -C ../{{ project }}/docroot && rm ../{{ project }}/cmf.tar.gz"
      args:
        # Unarchive module does not work properly in Ansible 2.1.1.0.
        warn: no
      when: "{{ not without_sources and not project_path.stat.exists }}"

    - name: Prepare CIBox-structured repository
      synchronize:
        src: "{{ item.src }}"
        dest: "../{{ project }}/{{ item.dest | default('') }}"
        archive: no
        recursive: yes
      with_items:
        - src: "../cmf/all/"
        - src: "../cmf/{{ cmf }}/all/"
        - src: "{{ cmf_configs.stat.path }}/"
        - src: "../cibox"
        - src: "../config.yml"
        - src: "../inventory"

        - src: "../scripts/"
          dest: "provisioning"

    - name: Setting permissions for project tree
      file:
        mode: 0777
        path: "../{{ project }}"
        state: directory
        recurse: yes

    - name: Update config.yml
      lineinfile:
        dest: "../{{ project }}/config.yml"
        line: "cmf: {{ cmf }}\ncore: {{ major }}\nproject: {{ project }}\nsite_url: https://{{ project }}.dev"
        insertafter: "^---$"

    - name: Update config.yml
      replace:
        dest: "../{{ project }}/config.yml"
        regexp: "APPLICATION_CONFIG: ~"
        replace: "{{ lookup('file', '../' + project + '/APPLICATION_CONFIG.yml') }}"

    - name: Clear created repository
      file:
        path: "../{{ project }}/{{ item }}"
        state: absent
      with_items:
        - provisioning/repository.yml
        - docroot/.gitignore
        - docroot/.git
        - APPLICATION_CONFIG.yml
