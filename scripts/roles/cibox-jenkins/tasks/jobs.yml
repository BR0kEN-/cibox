---
- name: Create folders for jobs
  file:
    path: "{{ jenkins_lib }}/jobs/{{ item.name }}"
    owner: "{{ jenkins_data.user }}"
    group: "{{ jenkins_data.group }}"
    state: directory
  with_items: jenkins_data.jobs

- name: Copy jobs
  template:
    src: jobs/{{ item.template }}
    dest: "{{ jenkins_lib }}/jobs/{{ item.name }}/config.xml"
    owner: "{{ jenkins_data.user }}"
    group: "{{ jenkins_data.group }}"
    force: yes
  with_items: jenkins_data.jobs

# Automatically scan users directory.
- name: Create folders for users
  file:
    path: '{{ jenkins_lib }}/users/{{ item | basename | regex_replace("\.xml.j2", "") }}'
    owner: "{{ jenkins_data.user }}"
    group: "{{ jenkins_data.group }}"
    state: directory
  with_fileglob:
    - ../templates/users/*.j2

- name: Copy users
  template:
    src: "users/{{ item | basename }}"
    dest: '{{ jenkins_lib }}/users/{{ item | basename | regex_replace("\.xml.j2", "") }}/config.xml'
    owner: "{{ jenkins_data.user }}"
    group: "{{ jenkins_data.group }}"
    force: yes
  with_fileglob:
    - ../templates/users/*.j2

- name: Copy configs
  template:
    src: "configs/{{ item | basename }}"
    dest: '{{ jenkins_lib }}/{{ item | basename | regex_replace("\.j2", "") }}'
    owner: "{{ jenkins_data.user }}"
    group: "{{ jenkins_data.group }}"
    force: yes
  notify: Restart Jenkins
  with_fileglob:
    - ../templates/configs/*.j2
