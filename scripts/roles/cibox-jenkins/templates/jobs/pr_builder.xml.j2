<?xml version='1.0' encoding='UTF-8'?>
<project>
    <actions/>
    <description>Create build on every commit to pull request on GitHub.</description>
    <keepDependencies>false</keepDependencies>
    <properties>
        <com.coravy.hudson.plugins.github.GithubProjectProperty plugin="github@1.14.0">
            <projectUrl>https://github.com/VENDOR/PROJECT/</projectUrl>
        </com.coravy.hudson.plugins.github.GithubProjectProperty>
    </properties>
    <scm class="hudson.plugins.git.GitSCM" plugin="git@2.4.0">
        <configVersion>2</configVersion>
        <userRemoteConfigs>
            <hudson.plugins.git.UserRemoteConfig>
                <refspec>+refs/pull/*:refs/remotes/origin/pr/*</refspec>
                <url>git@github.com:VENDOR/PROJECT.git</url>
                <credentialsId>00793e48-3d61-4891-9f43-e27701dffafd</credentialsId>
            </hudson.plugins.git.UserRemoteConfig>
        </userRemoteConfigs>
        <branches>
            <hudson.plugins.git.BranchSpec>
                <name>${sha1}</name>
            </hudson.plugins.git.BranchSpec>
        </branches>
        <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
        <submoduleCfg class="list"/>
        <extensions>
            <hudson.plugins.git.extensions.impl.CloneOption>
                <shallow>true</shallow>
                <reference></reference>
            </hudson.plugins.git.extensions.impl.CloneOption>
            <hudson.plugins.git.extensions.impl.SubmoduleOption>
                <disableSubmodules>true</disableSubmodules>
                <recursiveSubmodules>false</recursiveSubmodules>
                <trackingSubmodules>false</trackingSubmodules>
                <timeout>5</timeout>
            </hudson.plugins.git.extensions.impl.SubmoduleOption>
            <hudson.plugins.git.extensions.impl.CleanCheckout/>
            <hudson.plugins.git.extensions.impl.CleanBeforeCheckout/>
        </extensions>
    </scm>
    <canRoam>true</canRoam>
    <disabled>false</disabled>
    <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
    <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
    <triggers>
        <org.jenkinsci.plugins.ghprb.GhprbTrigger plugin="ghprb@1.15-0">
            <spec>* * * * *</spec>
            <adminlist>BR0kEN-</adminlist>
            <allowMembersOfWhitelistedOrgsAsAdmin>false</allowMembersOfWhitelistedOrgsAsAdmin>
            <orgslist>propeopleua</orgslist>
            <cron>* * * * *</cron>
            <triggerPhrase></triggerPhrase>
            <onlyTriggerPhrase>false</onlyTriggerPhrase>
            <useGitHubHooks>false</useGitHubHooks>
            <permitAll>false</permitAll>
            <commentFilePath></commentFilePath>
            <whitelist></whitelist>
            <autoCloseFailedPullRequests>false</autoCloseFailedPullRequests>
            <whiteListTargetBranches>
                <org.jenkinsci.plugins.ghprb.GhprbBranch>
                    <branch></branch>
                </org.jenkinsci.plugins.ghprb.GhprbBranch>
            </whiteListTargetBranches>
            <project>{{ item.name }}</project>
        </org.jenkinsci.plugins.ghprb.GhprbTrigger>
    </triggers>
    <concurrentBuild>false</concurrentBuild>
    <builders>
        <hudson.tasks.Shell>
            <command>#!/usr/bin/env bash -e

export PYTHONUNBUFFERED=1
# Create file for reports.
touch ${WORKSPACE}/commentinfo.md
# Store the name of file for reports to variable for future usage.
export ARTIFACTS=$_
export PROJECT=$(echo ${JOB_NAME//_PR_BUILDER/} | tr '[:upper:]' '[:lower:]')
export BUILD_NAME=${PROJECT}_build_${BUILD_NUMBER}
export SITE_URL=https://$(php -r "echo parse_url('${JOB_URL}')['host'];")/${BUILD_NAME}
export ANSIBLE_ARGS="-vvvv"

./cibox reinstall \
--site-url=${SITE_URL} \
--build-id=${BUILD_NAME} \
--workspace=${WORKSPACE}

./cibox sniffers \
--workspace=${WORKSPACE} \
--site-url=${SITE_URL} \
--build-id=${BUILD_NAME}

sudo chown -R jenkins:jenkins ${WORKSPACE}
# Move project from workspace to directory available in web.
sudo rsync --delete -ra ./docroot/ /var/www/${BUILD_NAME}/
# Set group and owner only for directory with an application.
sudo chown -R www-data:jenkins $_
</command>
        </hudson.tasks.Shell>
    </builders>
    <buildWrappers>
        <hudson.plugins.ansicolor.AnsiColorBuildWrapper plugin="ansicolor@0.4.2">
            <colorMapName>xterm</colorMapName>
        </hudson.plugins.ansicolor.AnsiColorBuildWrapper>
    </buildWrappers>
</project>
